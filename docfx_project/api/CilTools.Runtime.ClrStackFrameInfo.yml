### YamlMime:ManagedReference
items:
- uid: CilTools.Runtime.ClrStackFrameInfo
  commentId: T:CilTools.Runtime.ClrStackFrameInfo
  id: ClrStackFrameInfo
  parent: CilTools.Runtime
  children:
  - CilTools.Runtime.ClrStackFrameInfo.ILOffset
  - CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
  - CilTools.Runtime.ClrStackFrameInfo.Method
  - CilTools.Runtime.ClrStackFrameInfo.ToString
  - CilTools.Runtime.ClrStackFrameInfo.ToString(System.Boolean)
  langs:
  - csharp
  - vb
  name: ClrStackFrameInfo
  nameWithType: ClrStackFrameInfo
  fullName: CilTools.Runtime.ClrStackFrameInfo
  type: Class
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nRepresents a single frame in the callstack of .NET application. The stack frame contains information about the called method \nand the location of the IL code executed within that method\n"
  syntax:
    content: public class ClrStackFrameInfo
    content.vb: Public Class ClrStackFrameInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CilTools.Runtime.ClrStackFrameInfo.ToString
  commentId: M:CilTools.Runtime.ClrStackFrameInfo.ToString
  id: ToString
  parent: CilTools.Runtime.ClrStackFrameInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClrStackFrameInfo.ToString()
  fullName: CilTools.Runtime.ClrStackFrameInfo.ToString()
  type: Method
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the full text representation of this stack frame \n"
  remarks: "\nThe full text representation contains full signature of the called method, including argument types. \nIf this frame is not a call to a managed method, returns the name of the special frame from debugger API.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: CilTools.Runtime.ClrStackFrameInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CilTools.Runtime.ClrStackFrameInfo.ToString(System.Boolean)
  commentId: M:CilTools.Runtime.ClrStackFrameInfo.ToString(System.Boolean)
  id: ToString(System.Boolean)
  parent: CilTools.Runtime.ClrStackFrameInfo
  langs:
  - csharp
  - vb
  name: ToString(Boolean)
  nameWithType: ClrStackFrameInfo.ToString(Boolean)
  fullName: CilTools.Runtime.ClrStackFrameInfo.ToString(System.Boolean)
  type: Method
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the text representation of this stack frame \n"
  remarks: "\nThe full text representation contains full signature of the called method, including argument types. \nThe short text representation only contains the method&apos;s name. \nIf this frame is not a call to a managed method, returns the name of the special frame from debugger API.\n"
  syntax:
    content: public string ToString(bool full)
    parameters:
    - id: full
      type: System.Boolean
      description: Indicates whether the method should return full text representation
    return:
      type: System.String
    content.vb: Public Function ToString(full As Boolean) As String
  overload: CilTools.Runtime.ClrStackFrameInfo.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.Runtime.ClrStackFrameInfo.Method
  commentId: P:CilTools.Runtime.ClrStackFrameInfo.Method
  id: Method
  parent: CilTools.Runtime.ClrStackFrameInfo
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: ClrStackFrameInfo.Method
  fullName: CilTools.Runtime.ClrStackFrameInfo.Method
  type: Property
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the method corresponding to this stack frame. The value could be null if this frame is a special frame not \ncorresponding to a managed method, or if the library failed to construct MethodBase object for the called method.\n"
  syntax:
    content: public MethodBase Method { get; }
    parameters: []
    return:
      type: System.Reflection.MethodBase
    content.vb: Public ReadOnly Property Method As MethodBase
  overload: CilTools.Runtime.ClrStackFrameInfo.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CilTools.Runtime.ClrStackFrameInfo.ILOffset
  commentId: P:CilTools.Runtime.ClrStackFrameInfo.ILOffset
  id: ILOffset
  parent: CilTools.Runtime.ClrStackFrameInfo
  langs:
  - csharp
  - vb
  name: ILOffset
  nameWithType: ClrStackFrameInfo.ILOffset
  fullName: CilTools.Runtime.ClrStackFrameInfo.ILOffset
  type: Property
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the offset, in bytes, of the beginning of the IL code executed by this frame, relative to the beginning of the method body. \n"
  remarks: "\nThe library cannot accurately determine the currently executed instruction in every case, because the resulting native code \ncould be optimized by JIT. As a result, the currently executed code is presented as the starting and ending offsets.\n"
  syntax:
    content: public int ILOffset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ILOffset As Integer
  overload: CilTools.Runtime.ClrStackFrameInfo.ILOffset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
  commentId: P:CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
  id: ILOffsetEnd
  parent: CilTools.Runtime.ClrStackFrameInfo
  langs:
  - csharp
  - vb
  name: ILOffsetEnd
  nameWithType: ClrStackFrameInfo.ILOffsetEnd
  fullName: CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
  type: Property
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the offset, in bytes, of the end of the IL code executed by this frame, relative to the beginning of the method body. \n"
  remarks: "\nThe library cannot accurately determine the currently executed instruction in every case, because the resulting native code \ncould be optimized by JIT. As a result, the currently executed code is presented as the starting and ending offsets.\n"
  syntax:
    content: public int ILOffsetEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ILOffsetEnd As Integer
  overload: CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CilTools.Runtime
  commentId: N:CilTools.Runtime
  isExternal: true
  name: CilTools.Runtime
  nameWithType: CilTools.Runtime
  fullName: CilTools.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Runtime.ClrStackFrameInfo.ToString*
  commentId: Overload:CilTools.Runtime.ClrStackFrameInfo.ToString
  isExternal: true
  name: ToString
  nameWithType: ClrStackFrameInfo.ToString
  fullName: CilTools.Runtime.ClrStackFrameInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CilTools.Runtime.ClrStackFrameInfo.Method*
  commentId: Overload:CilTools.Runtime.ClrStackFrameInfo.Method
  isExternal: true
  name: Method
  nameWithType: ClrStackFrameInfo.Method
  fullName: CilTools.Runtime.ClrStackFrameInfo.Method
- uid: System.Reflection.MethodBase
  commentId: T:System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: CilTools.Runtime.ClrStackFrameInfo.ILOffset*
  commentId: Overload:CilTools.Runtime.ClrStackFrameInfo.ILOffset
  isExternal: true
  name: ILOffset
  nameWithType: ClrStackFrameInfo.ILOffset
  fullName: CilTools.Runtime.ClrStackFrameInfo.ILOffset
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd*
  commentId: Overload:CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
  isExternal: true
  name: ILOffsetEnd
  nameWithType: ClrStackFrameInfo.ILOffsetEnd
  fullName: CilTools.Runtime.ClrStackFrameInfo.ILOffsetEnd
