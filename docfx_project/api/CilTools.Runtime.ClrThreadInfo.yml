### YamlMime:ManagedReference
items:
- uid: CilTools.Runtime.ClrThreadInfo
  commentId: T:CilTools.Runtime.ClrThreadInfo
  id: ClrThreadInfo
  parent: CilTools.Runtime
  children:
  - CilTools.Runtime.ClrThreadInfo.DisplayString
  - CilTools.Runtime.ClrThreadInfo.Get(Microsoft.Diagnostics.Runtime.ClrRuntime,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},CilTools.Runtime.ClrAssemblyReader)
  - CilTools.Runtime.ClrThreadInfo.Print(System.IO.TextWriter)
  - CilTools.Runtime.ClrThreadInfo.StackTrace
  - CilTools.Runtime.ClrThreadInfo.ToString
  langs:
  - csharp
  - vb
  name: ClrThreadInfo
  nameWithType: ClrThreadInfo
  fullName: CilTools.Runtime.ClrThreadInfo
  type: Class
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nRepresents the information about the managed thread in the external process CLR instance\n"
  syntax:
    content: public class ClrThreadInfo
    content.vb: Public Class ClrThreadInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CilTools.Runtime.ClrThreadInfo.Get(Microsoft.Diagnostics.Runtime.ClrRuntime,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},CilTools.Runtime.ClrAssemblyReader)
  commentId: M:CilTools.Runtime.ClrThreadInfo.Get(Microsoft.Diagnostics.Runtime.ClrRuntime,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},CilTools.Runtime.ClrAssemblyReader)
  id: Get(Microsoft.Diagnostics.Runtime.ClrRuntime,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},CilTools.Runtime.ClrAssemblyReader)
  parent: CilTools.Runtime.ClrThreadInfo
  langs:
  - csharp
  - vb
  name: Get(ClrRuntime, IEnumerable<Assembly>, ClrAssemblyReader)
  nameWithType: ClrThreadInfo.Get(ClrRuntime, IEnumerable<Assembly>, ClrAssemblyReader)
  fullName: CilTools.Runtime.ClrThreadInfo.Get(Microsoft.Diagnostics.Runtime.ClrRuntime, System.Collections.Generic.IEnumerable<System.Reflection.Assembly>, CilTools.Runtime.ClrAssemblyReader)
  type: Method
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the information about managed threads in the specified CLR instance \n"
  syntax:
    content: public static ClrThreadInfo[] Get(ClrRuntime runtime, IEnumerable<Assembly> assemblies, ClrAssemblyReader reader)
    parameters:
    - id: runtime
      type: Microsoft.Diagnostics.Runtime.ClrRuntime
      description: The CLR isntance to fetch thread information from
    - id: assemblies
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: "\nThe optional collection of assemblies preloaded from the target CLR instance, or null if you don&apos;t have any\n"
    - id: reader
      type: CilTools.Runtime.ClrAssemblyReader
      description: "\nThe optional <xref href=\"CilTools.Runtime.ClrAssemblyReader\" data-throw-if-not-resolved=\"false\"></xref> object to be used for reading assemblies from the target CLR isntance, \nor null if you don&apos;t have one\n"
    return:
      type: CilTools.Runtime.ClrThreadInfo[]
      description: "\nThe array of <xref href=\"CilTools.Runtime.ClrThreadInfo\" data-throw-if-not-resolved=\"false\"></xref> objects containing information about managed threads\n"
    content.vb: Public Shared Function Get(runtime As ClrRuntime, assemblies As IEnumerable(Of Assembly), reader As ClrAssemblyReader) As ClrThreadInfo()
  overload: CilTools.Runtime.ClrThreadInfo.Get*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe value of <code data-dev-comment-type=\"paramref\" class=\"paramref\">runtime</code> parameter is null \n"
  nameWithType.vb: ClrThreadInfo.Get(ClrRuntime, IEnumerable(Of Assembly), ClrAssemblyReader)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CilTools.Runtime.ClrThreadInfo.Get(Microsoft.Diagnostics.Runtime.ClrRuntime, System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly), CilTools.Runtime.ClrAssemblyReader)
  name.vb: Get(ClrRuntime, IEnumerable(Of Assembly), ClrAssemblyReader)
- uid: CilTools.Runtime.ClrThreadInfo.Print(System.IO.TextWriter)
  commentId: M:CilTools.Runtime.ClrThreadInfo.Print(System.IO.TextWriter)
  id: Print(System.IO.TextWriter)
  parent: CilTools.Runtime.ClrThreadInfo
  langs:
  - csharp
  - vb
  name: Print(TextWriter)
  nameWithType: ClrThreadInfo.Print(TextWriter)
  fullName: CilTools.Runtime.ClrThreadInfo.Print(System.IO.TextWriter)
  type: Method
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nPrints the information about the current thread to the specified TextWriter\n"
  syntax:
    content: public void Print(TextWriter output)
    parameters:
    - id: output
      type: System.IO.TextWriter
    content.vb: Public Sub Print(output As TextWriter)
  overload: CilTools.Runtime.ClrThreadInfo.Print*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "\nThe value of <code data-dev-comment-type=\"paramref\" class=\"paramref\">output</code> parameter is null \n"
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.Runtime.ClrThreadInfo.ToString
  commentId: M:CilTools.Runtime.ClrThreadInfo.ToString
  id: ToString
  parent: CilTools.Runtime.ClrThreadInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ClrThreadInfo.ToString()
  fullName: CilTools.Runtime.ClrThreadInfo.ToString()
  type: Method
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the information about the current thread\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: CilTools.Runtime.ClrThreadInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: CilTools.Runtime.ClrThreadInfo.StackTrace
  commentId: P:CilTools.Runtime.ClrThreadInfo.StackTrace
  id: StackTrace
  parent: CilTools.Runtime.ClrThreadInfo
  langs:
  - csharp
  - vb
  name: StackTrace
  nameWithType: ClrThreadInfo.StackTrace
  fullName: CilTools.Runtime.ClrThreadInfo.StackTrace
  type: Property
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the stack trace of the current thread\n"
  remarks: "\nThe stack trace is the sequence of the nested method calls made in the thread before it reached the current point \nof execution.\n"
  syntax:
    content: public IEnumerable<ClrStackFrameInfo> StackTrace { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{CilTools.Runtime.ClrStackFrameInfo}
    content.vb: Public ReadOnly Property StackTrace As IEnumerable(Of ClrStackFrameInfo)
  overload: CilTools.Runtime.ClrThreadInfo.StackTrace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CilTools.Runtime.ClrThreadInfo.DisplayString
  commentId: P:CilTools.Runtime.ClrThreadInfo.DisplayString
  id: DisplayString
  parent: CilTools.Runtime.ClrThreadInfo
  langs:
  - csharp
  - vb
  name: DisplayString
  nameWithType: ClrThreadInfo.DisplayString
  fullName: CilTools.Runtime.ClrThreadInfo.DisplayString
  type: Property
  source:
    path: CilTools.Runtime
    isExternal: true
  assemblies:
  - CilTools.Runtime
  namespace: CilTools.Runtime
  summary: "\nGets the information about the current thread\n"
  syntax:
    content: public string DisplayString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayString As String
  overload: CilTools.Runtime.ClrThreadInfo.DisplayString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CilTools.Runtime
  commentId: N:CilTools.Runtime
  isExternal: true
  name: CilTools.Runtime
  nameWithType: CilTools.Runtime
  fullName: CilTools.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CilTools.Runtime.ClrThreadInfo.Get*
  commentId: Overload:CilTools.Runtime.ClrThreadInfo.Get
  isExternal: true
  name: Get
  nameWithType: ClrThreadInfo.Get
  fullName: CilTools.Runtime.ClrThreadInfo.Get
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: Microsoft.Diagnostics.Runtime.ClrRuntime
  isExternal: true
  name: ClrRuntime
  nameWithType: ClrRuntime
  fullName: Microsoft.Diagnostics.Runtime.ClrRuntime
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  nameWithType.vb: IEnumerable(Of Assembly)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly)
  name.vb: IEnumerable(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Assembly
    name: Assembly
    nameWithType: Assembly
    fullName: System.Reflection.Assembly
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Runtime.ClrAssemblyReader
  commentId: T:CilTools.Runtime.ClrAssemblyReader
  parent: CilTools.Runtime
  isExternal: true
  name: ClrAssemblyReader
  nameWithType: ClrAssemblyReader
  fullName: CilTools.Runtime.ClrAssemblyReader
- uid: CilTools.Runtime.ClrThreadInfo[]
  isExternal: true
  name: ClrThreadInfo[]
  nameWithType: ClrThreadInfo[]
  fullName: CilTools.Runtime.ClrThreadInfo[]
  nameWithType.vb: ClrThreadInfo()
  fullName.vb: CilTools.Runtime.ClrThreadInfo()
  name.vb: ClrThreadInfo()
  spec.csharp:
  - uid: CilTools.Runtime.ClrThreadInfo
    name: ClrThreadInfo
    nameWithType: ClrThreadInfo
    fullName: CilTools.Runtime.ClrThreadInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CilTools.Runtime.ClrThreadInfo
    name: ClrThreadInfo
    nameWithType: ClrThreadInfo
    fullName: CilTools.Runtime.ClrThreadInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CilTools.Runtime.ClrThreadInfo.Print*
  commentId: Overload:CilTools.Runtime.ClrThreadInfo.Print
  isExternal: true
  name: Print
  nameWithType: ClrThreadInfo.Print
  fullName: CilTools.Runtime.ClrThreadInfo.Print
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Runtime.ClrThreadInfo.ToString*
  commentId: Overload:CilTools.Runtime.ClrThreadInfo.ToString
  isExternal: true
  name: ToString
  nameWithType: ClrThreadInfo.ToString
  fullName: CilTools.Runtime.ClrThreadInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CilTools.Runtime.ClrThreadInfo.StackTrace*
  commentId: Overload:CilTools.Runtime.ClrThreadInfo.StackTrace
  isExternal: true
  name: StackTrace
  nameWithType: ClrThreadInfo.StackTrace
  fullName: CilTools.Runtime.ClrThreadInfo.StackTrace
- uid: System.Collections.Generic.IEnumerable{CilTools.Runtime.ClrStackFrameInfo}
  commentId: T:System.Collections.Generic.IEnumerable{CilTools.Runtime.ClrStackFrameInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ClrStackFrameInfo>
  nameWithType: IEnumerable<ClrStackFrameInfo>
  fullName: System.Collections.Generic.IEnumerable<CilTools.Runtime.ClrStackFrameInfo>
  nameWithType.vb: IEnumerable(Of ClrStackFrameInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CilTools.Runtime.ClrStackFrameInfo)
  name.vb: IEnumerable(Of ClrStackFrameInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CilTools.Runtime.ClrStackFrameInfo
    name: ClrStackFrameInfo
    nameWithType: ClrStackFrameInfo
    fullName: CilTools.Runtime.ClrStackFrameInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CilTools.Runtime.ClrStackFrameInfo
    name: ClrStackFrameInfo
    nameWithType: ClrStackFrameInfo
    fullName: CilTools.Runtime.ClrStackFrameInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CilTools.Runtime.ClrThreadInfo.DisplayString*
  commentId: Overload:CilTools.Runtime.ClrThreadInfo.DisplayString
  isExternal: true
  name: DisplayString
  nameWithType: ClrThreadInfo.DisplayString
  fullName: CilTools.Runtime.ClrThreadInfo.DisplayString
