### YamlMime:ManagedReference
items:
- uid: CilBytecodeParser.CallingConvention
  commentId: T:CilBytecodeParser.CallingConvention
  id: CallingConvention
  parent: CilBytecodeParser
  children:
  - CilBytecodeParser.CallingConvention.CDecl
  - CilBytecodeParser.CallingConvention.Default
  - CilBytecodeParser.CallingConvention.FastCall
  - CilBytecodeParser.CallingConvention.StdCall
  - CilBytecodeParser.CallingConvention.ThisCall
  - CilBytecodeParser.CallingConvention.Vararg
  langs:
  - csharp
  - vb
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: CilBytecodeParser.CallingConvention
  type: Enum
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nRepresents calling convention, a set of rules defining how the function interacts with its caller, as defined by ECMA-335\n"
  syntax:
    content: public enum CallingConvention
    content.vb: Public Enum CallingConvention
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: CilBytecodeParser.CallingConvention.Default
  commentId: F:CilBytecodeParser.CallingConvention.Default
  id: Default
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: CallingConvention.Default
  fullName: CilBytecodeParser.CallingConvention.Default
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nDefault managed calling convention (fixed amount of arguments)\n"
  syntax:
    content: Default = 0
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CilBytecodeParser.CallingConvention.CDecl
  commentId: F:CilBytecodeParser.CallingConvention.CDecl
  id: CDecl
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: CDecl
  nameWithType: CallingConvention.CDecl
  fullName: CilBytecodeParser.CallingConvention.CDecl
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nC language calling convention\n"
  syntax:
    content: CDecl = 1
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CilBytecodeParser.CallingConvention.StdCall
  commentId: F:CilBytecodeParser.CallingConvention.StdCall
  id: StdCall
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: StdCall
  nameWithType: CallingConvention.StdCall
  fullName: CilBytecodeParser.CallingConvention.StdCall
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nStandard x86 calling convention\n"
  syntax:
    content: StdCall = 2
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CilBytecodeParser.CallingConvention.ThisCall
  commentId: F:CilBytecodeParser.CallingConvention.ThisCall
  id: ThisCall
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: ThisCall
  nameWithType: CallingConvention.ThisCall
  fullName: CilBytecodeParser.CallingConvention.ThisCall
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nCalling convention for C++ class member functions\n"
  syntax:
    content: ThisCall = 3
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CilBytecodeParser.CallingConvention.FastCall
  commentId: F:CilBytecodeParser.CallingConvention.FastCall
  id: FastCall
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: FastCall
  nameWithType: CallingConvention.FastCall
  fullName: CilBytecodeParser.CallingConvention.FastCall
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nOptimized x86 calling convention\n"
  syntax:
    content: FastCall = 4
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: CilBytecodeParser.CallingConvention.Vararg
  commentId: F:CilBytecodeParser.CallingConvention.Vararg
  id: Vararg
  parent: CilBytecodeParser.CallingConvention
  langs:
  - csharp
  - vb
  name: Vararg
  nameWithType: CallingConvention.Vararg
  fullName: CilBytecodeParser.CallingConvention.Vararg
  type: Field
  source:
    path: CilBytecodeParser
    isExternal: true
  assemblies:
  - CilBytecodeParser
  namespace: CilBytecodeParser
  summary: "\nManaged calling convention with variable amount of arguments\n"
  syntax:
    content: Vararg = 5
    return:
      type: CilBytecodeParser.CallingConvention
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: CilBytecodeParser
  commentId: N:CilBytecodeParser
  isExternal: true
  name: CilBytecodeParser
  nameWithType: CilBytecodeParser
  fullName: CilBytecodeParser
- uid: CilBytecodeParser.CallingConvention
  commentId: T:CilBytecodeParser.CallingConvention
  parent: CilBytecodeParser
  isExternal: true
  name: CallingConvention
  nameWithType: CallingConvention
  fullName: CilBytecodeParser.CallingConvention
