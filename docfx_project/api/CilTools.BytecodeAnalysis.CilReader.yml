### YamlMime:ManagedReference
items:
- uid: CilTools.BytecodeAnalysis.CilReader
  commentId: T:CilTools.BytecodeAnalysis.CilReader
  id: CilReader
  parent: CilTools.BytecodeAnalysis
  children:
  - CilTools.BytecodeAnalysis.CilReader.#ctor(System.Byte[])
  - CilTools.BytecodeAnalysis.CilReader.#ctor(System.Reflection.MethodBase)
  - CilTools.BytecodeAnalysis.CilReader.cilbytes
  - CilTools.BytecodeAnalysis.CilReader.current_ordinal
  - CilTools.BytecodeAnalysis.CilReader.current_pos
  - CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Byte[])
  - CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Reflection.MethodBase)
  - CilTools.BytecodeAnalysis.CilReader.method
  - CilTools.BytecodeAnalysis.CilReader.Method
  - CilTools.BytecodeAnalysis.CilReader.Read
  - CilTools.BytecodeAnalysis.CilReader.ReadAll
  - CilTools.BytecodeAnalysis.CilReader.state
  - CilTools.BytecodeAnalysis.CilReader.State
  langs:
  - csharp
  - vb
  name: CilReader
  nameWithType: CilReader
  fullName: CilTools.BytecodeAnalysis.CilReader
  type: Class
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nSequentially processes CIL bytecode, reading instructions from the method body\n"
  syntax:
    content: public class CilReader
    content.vb: Public Class CilReader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CilTools.BytecodeAnalysis.CilReader.cilbytes
  commentId: F:CilTools.BytecodeAnalysis.CilReader.cilbytes
  id: cilbytes
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: cilbytes
  nameWithType: CilReader.cilbytes
  fullName: CilTools.BytecodeAnalysis.CilReader.cilbytes
  type: Field
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nRaw CIL bytes which this object processes\n"
  syntax:
    content: protected byte[] cilbytes
    return:
      type: System.Byte[]
    content.vb: Protected cilbytes As Byte()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CilTools.BytecodeAnalysis.CilReader.current_pos
  commentId: F:CilTools.BytecodeAnalysis.CilReader.current_pos
  id: current_pos
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: current_pos
  nameWithType: CilReader.current_pos
  fullName: CilTools.BytecodeAnalysis.CilReader.current_pos
  type: Field
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nCurrent position in the source array\n"
  syntax:
    content: protected int current_pos
    return:
      type: System.Int32
    content.vb: Protected current_pos As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CilTools.BytecodeAnalysis.CilReader.current_ordinal
  commentId: F:CilTools.BytecodeAnalysis.CilReader.current_ordinal
  id: current_ordinal
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: current_ordinal
  nameWithType: CilReader.current_ordinal
  fullName: CilTools.BytecodeAnalysis.CilReader.current_ordinal
  type: Field
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nAn ordinal number of the next instruction\n"
  syntax:
    content: protected uint current_ordinal
    return:
      type: System.UInt32
    content.vb: Protected current_ordinal As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CilTools.BytecodeAnalysis.CilReader.state
  commentId: F:CilTools.BytecodeAnalysis.CilReader.state
  id: state
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: state
  nameWithType: CilReader.state
  fullName: CilTools.BytecodeAnalysis.CilReader.state
  type: Field
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nCurrent state of this object\n"
  syntax:
    content: protected CilReaderState state
    return:
      type: CilTools.BytecodeAnalysis.CilReaderState
    content.vb: Protected state As CilReaderState
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CilTools.BytecodeAnalysis.CilReader.method
  commentId: F:CilTools.BytecodeAnalysis.CilReader.method
  id: method
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: method
  nameWithType: CilReader.method
  fullName: CilTools.BytecodeAnalysis.CilReader.method
  type: Field
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nA method which body this object reads\n"
  syntax:
    content: protected MethodBase method
    return:
      type: System.Reflection.MethodBase
    content.vb: Protected method As MethodBase
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CilTools.BytecodeAnalysis.CilReader.#ctor(System.Byte[])
  commentId: M:CilTools.BytecodeAnalysis.CilReader.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: CilReader(Byte[])
  nameWithType: CilReader.CilReader(Byte[])
  fullName: CilTools.BytecodeAnalysis.CilReader.CilReader(System.Byte[])
  type: Constructor
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nCreates new CilReader object that uses specified byte array as source\n"
  syntax:
    content: public CilReader(byte[] src)
    parameters:
    - id: src
      type: System.Byte[]
      description: An array of bytecode to read from
    content.vb: Public Sub New(src As Byte())
  overload: CilTools.BytecodeAnalysis.CilReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Source array is null
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Source array is empty
  nameWithType.vb: CilReader.CilReader(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CilTools.BytecodeAnalysis.CilReader.CilReader(System.Byte())
  name.vb: CilReader(Byte())
- uid: CilTools.BytecodeAnalysis.CilReader.#ctor(System.Reflection.MethodBase)
  commentId: M:CilTools.BytecodeAnalysis.CilReader.#ctor(System.Reflection.MethodBase)
  id: '#ctor(System.Reflection.MethodBase)'
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: CilReader(MethodBase)
  nameWithType: CilReader.CilReader(MethodBase)
  fullName: CilTools.BytecodeAnalysis.CilReader.CilReader(System.Reflection.MethodBase)
  type: Constructor
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nCreates new CilReader that uses a body of specified method as a source\n"
  syntax:
    content: public CilReader(MethodBase src)
    parameters:
    - id: src
      type: System.Reflection.MethodBase
      description: A MethodBase object that specifies a method to read from
    content.vb: Public Sub New(src As MethodBase)
  overload: CilTools.BytecodeAnalysis.CilReader.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Source method is null
  - type: CilTools.BytecodeAnalysis.CilParserException
    commentId: T:CilTools.BytecodeAnalysis.CilParserException
    description: GetMethodBody returned null
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.BytecodeAnalysis.CilReader.Read
  commentId: M:CilTools.BytecodeAnalysis.CilReader.Read
  id: Read
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: Read()
  nameWithType: CilReader.Read()
  fullName: CilTools.BytecodeAnalysis.CilReader.Read()
  type: Method
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nReads next instruction from source\n"
  syntax:
    content: public CilInstruction Read()
    return:
      type: CilTools.BytecodeAnalysis.CilInstruction
      description: CilInstruction retrieved from the source
    content.vb: Public Function Read As CilInstruction
  overload: CilTools.BytecodeAnalysis.CilReader.Read*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This CilReader is in faulty state or reached the end of source byte array
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: CilReader encountered unknown opcode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.BytecodeAnalysis.CilReader.ReadAll
  commentId: M:CilTools.BytecodeAnalysis.CilReader.ReadAll
  id: ReadAll
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: ReadAll()
  nameWithType: CilReader.ReadAll()
  fullName: CilTools.BytecodeAnalysis.CilReader.ReadAll()
  type: Method
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nReads all instructions from source until the end is reached\n"
  syntax:
    content: public IEnumerable<CilInstruction> ReadAll()
    return:
      type: System.Collections.Generic.IEnumerable{CilTools.BytecodeAnalysis.CilInstruction}
      description: A collection of CIL instructions
    content.vb: Public Function ReadAll As IEnumerable(Of CilInstruction)
  overload: CilTools.BytecodeAnalysis.CilReader.ReadAll*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: CilReader encountered unknown opcode
  - type: CilTools.BytecodeAnalysis.CilParserException
    commentId: T:CilTools.BytecodeAnalysis.CilParserException
    description: Unknown error occured
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Byte[])
  commentId: M:CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Byte[])
  id: GetInstructions(System.Byte[])
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: GetInstructions(Byte[])
  nameWithType: CilReader.GetInstructions(Byte[])
  fullName: CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Byte[])
  type: Method
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nReads all instructions from specified array of bytecode\n"
  syntax:
    content: public static IEnumerable<CilInstruction> GetInstructions(byte[] src)
    parameters:
    - id: src
      type: System.Byte[]
      description: Source byte array
    return:
      type: System.Collections.Generic.IEnumerable{CilTools.BytecodeAnalysis.CilInstruction}
      description: A collection of CIL instructions
    content.vb: Public Shared Function GetInstructions(src As Byte()) As IEnumerable(Of CilInstruction)
  overload: CilTools.BytecodeAnalysis.CilReader.GetInstructions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Source array is null
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Source array is empty
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: CilReader encountered unknown opcode
  - type: CilTools.BytecodeAnalysis.CilParserException
    commentId: T:CilTools.BytecodeAnalysis.CilParserException
    description: Unknown error occured
  nameWithType.vb: CilReader.GetInstructions(Byte())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Byte())
  name.vb: GetInstructions(Byte())
- uid: CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Reflection.MethodBase)
  commentId: M:CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Reflection.MethodBase)
  id: GetInstructions(System.Reflection.MethodBase)
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: GetInstructions(MethodBase)
  nameWithType: CilReader.GetInstructions(MethodBase)
  fullName: CilTools.BytecodeAnalysis.CilReader.GetInstructions(System.Reflection.MethodBase)
  type: Method
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nReads all instructions from specified method&apos;s body\n"
  syntax:
    content: public static IEnumerable<CilInstruction> GetInstructions(MethodBase m)
    parameters:
    - id: m
      type: System.Reflection.MethodBase
      description: Source method
    return:
      type: System.Collections.Generic.IEnumerable{CilTools.BytecodeAnalysis.CilInstruction}
      description: A collection of CIL instructions that form the body of this method
    content.vb: Public Shared Function GetInstructions(m As MethodBase) As IEnumerable(Of CilInstruction)
  overload: CilTools.BytecodeAnalysis.CilReader.GetInstructions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Source method is null
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: CilReader encountered unknown opcode
  - type: CilTools.BytecodeAnalysis.CilParserException
    commentId: T:CilTools.BytecodeAnalysis.CilParserException
    description: Failed to retrieve method body for the method
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CilTools.BytecodeAnalysis.CilReader.Method
  commentId: P:CilTools.BytecodeAnalysis.CilReader.Method
  id: Method
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: CilReader.Method
  fullName: CilTools.BytecodeAnalysis.CilReader.Method
  type: Property
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nGets a method which body this CilReader object reads\n"
  syntax:
    content: public MethodBase Method { get; }
    parameters: []
    return:
      type: System.Reflection.MethodBase
    content.vb: Public ReadOnly Property Method As MethodBase
  overload: CilTools.BytecodeAnalysis.CilReader.Method*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: CilTools.BytecodeAnalysis.CilReader.State
  commentId: P:CilTools.BytecodeAnalysis.CilReader.State
  id: State
  parent: CilTools.BytecodeAnalysis.CilReader
  langs:
  - csharp
  - vb
  name: State
  nameWithType: CilReader.State
  fullName: CilTools.BytecodeAnalysis.CilReader.State
  type: Property
  source:
    path: CilTools.BytecodeAnalysis
    isExternal: true
  assemblies:
  - CilTools.BytecodeAnalysis
  namespace: CilTools.BytecodeAnalysis
  summary: "\nGets a current state of this CilReader object\n"
  syntax:
    content: public CilReaderState State { get; }
    parameters: []
    return:
      type: CilTools.BytecodeAnalysis.CilReaderState
    content.vb: Public ReadOnly Property State As CilReaderState
  overload: CilTools.BytecodeAnalysis.CilReader.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: CilTools.BytecodeAnalysis
  commentId: N:CilTools.BytecodeAnalysis
  isExternal: true
  name: CilTools.BytecodeAnalysis
  nameWithType: CilTools.BytecodeAnalysis
  fullName: CilTools.BytecodeAnalysis
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: CilTools.BytecodeAnalysis.CilReaderState
  commentId: T:CilTools.BytecodeAnalysis.CilReaderState
  parent: CilTools.BytecodeAnalysis
  isExternal: true
  name: CilReaderState
  nameWithType: CilReaderState
  fullName: CilTools.BytecodeAnalysis.CilReaderState
- uid: System.Reflection.MethodBase
  commentId: T:System.Reflection.MethodBase
  parent: System.Reflection
  isExternal: true
  name: MethodBase
  nameWithType: MethodBase
  fullName: System.Reflection.MethodBase
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: CilTools.BytecodeAnalysis.CilReader.#ctor*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.#ctor
  isExternal: true
  name: CilReader
  nameWithType: CilReader.CilReader
  fullName: CilTools.BytecodeAnalysis.CilReader.CilReader
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: CilTools.BytecodeAnalysis.CilParserException
  commentId: T:CilTools.BytecodeAnalysis.CilParserException
  isExternal: true
  name: CilParserException
  nameWithType: CilParserException
  fullName: CilTools.BytecodeAnalysis.CilParserException
- uid: CilTools.BytecodeAnalysis.CilReader.Read*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.Read
  isExternal: true
  name: Read
  nameWithType: CilReader.Read
  fullName: CilTools.BytecodeAnalysis.CilReader.Read
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: CilTools.BytecodeAnalysis.CilInstruction
  commentId: T:CilTools.BytecodeAnalysis.CilInstruction
  parent: CilTools.BytecodeAnalysis
  isExternal: true
  name: CilInstruction
  nameWithType: CilInstruction
  fullName: CilTools.BytecodeAnalysis.CilInstruction
- uid: CilTools.BytecodeAnalysis.CilReader.ReadAll*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.ReadAll
  isExternal: true
  name: ReadAll
  nameWithType: CilReader.ReadAll
  fullName: CilTools.BytecodeAnalysis.CilReader.ReadAll
- uid: System.Collections.Generic.IEnumerable{CilTools.BytecodeAnalysis.CilInstruction}
  commentId: T:System.Collections.Generic.IEnumerable{CilTools.BytecodeAnalysis.CilInstruction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<CilInstruction>
  nameWithType: IEnumerable<CilInstruction>
  fullName: System.Collections.Generic.IEnumerable<CilTools.BytecodeAnalysis.CilInstruction>
  nameWithType.vb: IEnumerable(Of CilInstruction)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CilTools.BytecodeAnalysis.CilInstruction)
  name.vb: IEnumerable(Of CilInstruction)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CilTools.BytecodeAnalysis.CilInstruction
    name: CilInstruction
    nameWithType: CilInstruction
    fullName: CilTools.BytecodeAnalysis.CilInstruction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CilTools.BytecodeAnalysis.CilInstruction
    name: CilInstruction
    nameWithType: CilInstruction
    fullName: CilTools.BytecodeAnalysis.CilInstruction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: CilTools.BytecodeAnalysis.CilReader.GetInstructions*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.GetInstructions
  isExternal: true
  name: GetInstructions
  nameWithType: CilReader.GetInstructions
  fullName: CilTools.BytecodeAnalysis.CilReader.GetInstructions
- uid: CilTools.BytecodeAnalysis.CilReader.Method*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.Method
  isExternal: true
  name: Method
  nameWithType: CilReader.Method
  fullName: CilTools.BytecodeAnalysis.CilReader.Method
- uid: CilTools.BytecodeAnalysis.CilReader.State*
  commentId: Overload:CilTools.BytecodeAnalysis.CilReader.State
  isExternal: true
  name: State
  nameWithType: CilReader.State
  fullName: CilTools.BytecodeAnalysis.CilReader.State
